#include <iostream>
#include <vector>

using namespace std;

void wypisz(vector<int>tab)
{
	for (int i = 0; i < tab.size(); i++)
	{
		cout << tab[i] << ",";
	}
	cout << endl;
}

int max(vector<int>tab)
{
	int wynik = tab[0];

	for (int i = 1; i < tab.size(); i++)
	{
		if (tab[i] > wynik)
		{
			wynik = tab[i];
		}
	}
	return wynik;
}

bool czyNalezy(vector<int>tab, int element)
{
	for (int i = 0; i < tab.size(); i++)
	{
		if (tab[i] == element)
		{
			return true;
		}
	}
	return false;
}

bool czyZawiera(vector<int>tab, vector<int>tab1)
{
	for (int i = 0; i < tab1.size(); i++)
	{
		if (!czyNalezy(tab, tab1[i]))
		{
			return false;
		}
	}
	return true;
}

vector<int>unikalnosc(vector<int>tab)
{
	vector<int>wynik;

	for (int i = 0; i < tab.size(); i++)
	{
		if (!czyNalezy(wynik, tab[i]))
		{
			wynik.push_back(tab[i]);
		}
	}
	return wynik;
}

int suma(vector<int>tab)
{
	int wynik = 0;

	for (int i = 0; i < tab.size(); i++)
	{
		wynik += tab[i];
	}
	return wynik;
}

double avg(vector<int>tab)
{
	double wynik = suma(tab);
	return wynik / tab.size();
}

vector<int>podzielne(vector<int>tab, int dzielnik, int reszta = 0)
{
	vector<int>wynik;

	for (int i = 0; i < tab.size(); i++)
	{
		if (tab[i] % dzielnik == reszta)
		{
			wynik.push_back(tab[i]);
		}
	}
	return wynik;
}

vector<int> reverseInt(int liczba) {
	vector<int> wynik;

	do 
	{
		int tmp = liczba % 10;
		wynik.push_back(tmp);
		liczba = liczba / 10;
	} while (liczba > 0);

	return wynik;
}

vector<int>dodaj(vector<int>l1, vector<int>l2)
{
	vector<int>wynik;
	int reszta = 0;

	for (int i = 0; i < l1.size(); i++)
	{
		int dodawanie_wynik = l1[1] + l2[i] + reszta;
		int reszta = dodawanie_wynik / 10;
		dodawanie_wynik = dodawanie_wynik % 10;
		wynik.push_back(dodawanie_wynik);
	}
	wynik.push_back(reszta);

	return wynik;
}

int ObliczanieCyfryKontrolnej(long long pesel) 
{
	return (9 * ((pesel / 1000000000) % 10) +
		7 * ((pesel / 100000000) % 10) +
		3 * ((pesel / 10000000) % 10) +
		1 * ((pesel / 1000000) % 10) +
		9 * ((pesel / 100000) % 10) +
		7 * ((pesel / 10000) % 10) +
		3 * ((pesel / 1000) % 10) +
		1 * ((pesel / 100) % 10) +
		9 * ((pesel / 10) % 10) +
		7 * (pesel % 10)) % 10;
}

bool sprawdzanieCyfryKontrolnej(long long pesel) {
	int sumacyfry = ObliczanieCyfryKontrolnej(pesel);
	return (sumacyfry == (pesel % 10));
}

int main()
{
    std::cout << "Hello World!\n";
	vector<int>wynik(reverseInt(123));
	wypisz(wynik);
	vector<int>l1 = reverseInt(234);
	wypisz(l1);
	vector<int>l2 = reverseInt(328);
	wypisz(l2);

	vector<int>l3 = dodaj(l1, l2);
	wypisz(l3);
	
	int suma_l3 = suma(l3);
	cout << suma_l3 << endl;

	long long pesel = 99999999999;
	int cyfra_kontrolna = ObliczanieCyfryKontrolnej(pesel);
	cout << cyfra_kontrolna << endl;
	if (sprawdzanieCyfryKontrolnej(pesel)) 
	{
		cout << "PESEL prawidlowy" << endl;
	}
	else 
	{
		cout << "PESEL nieprawidlowy" << endl;
	}
	return 0;
}

//1. Wymyślić przykład.
//2. Sprawdzić czy przykład jest kompletny.
//3. Sformalizowanie przykładu.
//4. Nagłówek funkcji.
//5. Ciało funkcji.
//6. Nie wiesz co pisać, to wróć do przukładu
